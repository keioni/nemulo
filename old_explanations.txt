
For GitHub Copilot:
Explanations in this file has been obsoleted.
Do not use them for code completion and suggestions in this project.

---


NEMULO - Very Very Simple blog system

This system is designed to create a simple blog.

It does not run on a server. Instead, you execute the program on your local PC,
which converts articles written in Markdown format into HTML files using a Python script.
These static documents can then be hosted on platforms like Amazon S3.
However, this system does not include a built-in mechanism for uploading files to a server.
Users are expected to create their own upload scripts as needed.

Since the output consists only of static files,
it does not include any functionality for user interactions, such as a comment section.

Conversion from Markdown to HTML is done using the `Python-Markdown` library.
Metadata is embedded in the HTML using the `Meta-Data` extension of `Python-Markdown`.
The system uses the `Jinja2` template engine to insert metadata values into the HTML template.

When the program is executed, it performs the following tasks:

* Finds Markdown files that need to be updated.
    * The system compares the modification times of Markdown and HTML files.
    * If the Markdown file is newer than the HTML file, the Markdown file is processed.
* Gets metadata from Markdown file body and name.
    * Markdown files are located in the `text/src/` directory.
    * Only `.md` files with filenames starting with a YYYYMMDD are processed.
    * Article date and title are get from filename and inserted into the metadata dictionary.
        * ie) `20210101_Hello_World.md` -> Date: 2021-01-01, Title: Hello World
    * Converted Markdown content is inserted into the 'Content' key of the metadata dictionary.

* Saves the converted HTML files in the `text/html/` directory.
    * The filename follows the format `Date_Title.html`.
    * If `Title` contains space and other unsafe characters,
        they are replaced with underscores (`_`).

* Updates the top page to include the latest ARTICLE_COUNT articles.
    * Each article title serves as a link to its corresponding HTML file.

* In addition to the top page, the system generates a JavaScript file (`text/html/articles.js`).
    * This file includes an array of the latest SIDEBAR_COUNT articles.
    * The JavaScript code is used to render the latest SIDEBAR_COUNT articles
        in the sidebar when the top page and individual article pages are displayed.
    * Each article name serves as a link to its corresponding HTML file.
